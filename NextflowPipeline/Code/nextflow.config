// ===============================================================================
// CONFIGURATION PROFILE POUR BELUGA HPC CLUSTER
// ===============================================================================
// Cette configuration est spécifique au système HPC de Calcul Canada (Alliance).
// Elle définit les paramètres nécessaires pour exécuter Nextflow sur Beluga.
// ===============================================================================

params.config_profile_description = 'Alliance Beluga HPC config'  // Description du profil
params.config_profile_contact = 'https://docs.alliancecan.ca/wiki/Technical_support'  // Lien pour obtenir de l'aide technique
params.config_profile_url = 'docs.alliancecan.ca/wiki/Nextflow'  // Documentation Nextflow pour Alliance

// ===============================================================================
// CONFIGURATION GLOBALE DES PROCESSUS
// ===============================================================================
// Définit les paramètres par défaut pour tous les processus du pipeline
// ===============================================================================

process {
  executor = 'slurm'  // Utilise SLURM comme gestionnaire de tâches
  clusterOptions = '--account=rrg-xroucou'  // Compte à facturer
  maxRetries = 4  // Permet 5 tentatives au total (1 initiale + 4 retries)
  
  // Stratégie d'erreur: réessaie pour tous les types d'erreurs tant que task.attempt <= 5
  errorStrategy = { task.attempt <= 5 ? 'retry' : 'finish' }
  
  // Allocation mémoire: double uniquement pour les erreurs liées à la mémoire
  memory = { 
    if (task.exitStatus in [137,139,140,143] && task.attempt > 1) {
      return check_max( 80.GB * (2 ** (task.attempt - 1)), 'memory' )
    } else {
      return 80.GB
    }
  }
  
  cpu = 20  // Nombre de CPUs par défaut
  time = '12h'  // Temps d'exécution maximum par défaut
}

// ===============================================================================
// CONFIGURATION DE L'EXÉCUTEUR (EXECUTOR)
// ===============================================================================
// Contrôle comment Nextflow interagit avec le gestionnaire de tâches (SLURM)
// ===============================================================================

executor {
  pollInterval = '60 sec'  // Vérifie l'état des jobs toutes les 60 secondes
  submitRateLimit = '60/1min'  // Limite le nombre de soumissions à 60 par minute pour éviter de surcharger SLURM
  queueSize = 100  // Nombre maximal de jobs en attente dans la file Nextflow
}

// ===============================================================================
// PROFILS D'EXÉCUTION
// ===============================================================================
// Définit des configurations prédéfinies qui peuvent être activées avec -profile
// ===============================================================================


// ===============================================================================
// CHEMINS DES FICHIERS DE RÉFÉRENCE POUR BOWTIE
// ===============================================================================
// Chemins vers les fichiers FASTA des ARN à filtrer (snRNA, snoRNA, rRNA) par espèce
// Ces fichiers sont utilisés dans le filtrage initial avec Bowtie
// false = l'espèce n'est pas configurée/supportée
// ===============================================================================

// Fichiers FASTA pour Bowtie - filtrage des ARN non-codants et ribosomiques
params.path_fasta_HS_B = '/home/ilyass09/scratch/riboseq_pipeline/fasta_files/snRNA_snoRNA_rRNA_HS_ensembl113.fasta'  // Homo sapiens (humain)
params.path_fasta_CE_B = false  // Caenorhabditis elegans (ver)
params.path_fasta_DM_B = false  // Drosophila melanogaster (mouche)
params.path_fasta_SC_B = false  // Saccharomyces cerevisiae (levure)
params.path_fasta_DR_B = false  // Danio rerio (poisson-zèbre)
params.path_fasta_SM_B = false  // Schistosoma mansoni (parasite)

// ===============================================================================
// CHEMINS DES FICHIERS DE RÉFÉRENCE POUR STAR
// ===============================================================================
// Chemins vers les génomes complets (FASTA) et annotations (GTF) par espèce
// Ces fichiers sont utilisés pour l'alignement final avec STAR
// ===============================================================================

// Fichiers de référence pour STAR - alignement sur le génome complet
// Format: génome FASTA + annotation GTF pour chaque espèce
params.path_fasta_HS = '/home/ilyass09/scratch/riboseq_pipeline/fasta_files/complete_genome_HS.fa'  // Génome humain
params.path_fasta_HS_GTF = '/home/ilyass09/scratch/riboseq_pipeline/fasta_files/Homo_sapiens.GRCh38.113.gtf'  // Annotation humaine

// Références pour autres espèces - non configurées dans cette installation
params.path_fasta_CE = false  // Génome C. elegans
params.path_fasta_CE_GTF = false  // Annotation C. elegans

params.path_fasta_DM = false  // Génome D. melanogaster
params.path_fasta_DM_GTF = false  // Annotation D. melanogaster

params.path_fasta_SC = false  // Génome S. cerevisiae
params.path_fasta_SC_GTF = false  // Annotation S. cerevisiae

params.path_fasta_DR = false  // Génome D. rerio
params.path_fasta_DR_GTF = false  // Annotation D. rerio

params.path_fasta_SM = false  // Génome S. mansoni
params.path_fasta_SM_GTF = false  // Annotation S. mansoni

// ===============================================================================
// PARAMÈTRES DU PREMIER STAGE (FIRST STAGE)
// ===============================================================================
// Le premier stage télécharge les données SRA, effectue le contrôle qualité
// et le trimming des lectures.
// ===============================================================================

// Dossier de sortie pour le premier stage
// Contient les données téléchargées, les rapports FastQC et les lectures trimmées
params.outdir_first_stage = '/home/ilyass09/scratch/riboseq_pipeline/output_complet'

// Fichier CSV d'entrée contenant les métadonnées des échantillons à analyser
// Format attendu: 
// Name,Species,Study_accession,Project_link,PMID,Treatment_type,Drug,Sample_accession,Biological_type,Ribo_type,Trim_arg,S_P_type
params.input_csv = '/home/ilyass09/scratch/riboseq_pipeline/Samples_sheet/Sample_sheet_test.csv'

//
// Etape Multiqc 
// Parametre pour multiqc 
params.multiqc_config = "/project/def-xroucou/riboseq_pipeline/config_multiqc.yaml"

// ===============================================================================
// PARAMÈTRES DU SECOND STAGE
// ===============================================================================
// Le second stage utilise les fichiers traités du premier stage pour:
// 1. Filtrer les ARN ribosomiques avec Bowtie
// 2. Aligner les lectures restantes sur le génome avec STAR
// ===============================================================================

// Chemin vers le dossier de sortie du premier stage (entrée du second stage)
// Contient les fichiers FASTQ trimés qui seront utilisés pour l'alignement
params.input_output_fastq_second_stage = '/home/ilyass09/scratch/riboseq_pipeline/output_complet_HS'

// Fichier CSV d'entrée (même que pour le premier stage)
params.input_csv = '/home/ilyass09/scratch/riboseq_pipeline/Samples_sheet/Sample_sheet_test.csv'

// Dossier de sortie pour le second stage
// Contiendra les fichiers d'alignement (BAM) et autres résultats
params.outdir_stage_stage = '/home/ilyass09/scratch/riboseq_pipeline/Second_Stage_HS_Single'

// Dossier parent pour les index et autres fichiers communs
// Utilisé pour stocker les index Bowtie et STAR qui peuvent être réutilisés
params.outdir_stage_stage_parent = '/home/ilyass09/scratch/riboseq_pipeline'

// ===============================================================================
// GUIDE D'EXÉCUTION DU PIPELINE
// ===============================================================================
// Instructions détaillées pour exécuter chaque étape du pipeline
// ===============================================================================

/*
EXÉCUTION DU PIPELINE COMPLET EN 4 ÉTAPES:

Les chemins vers les scripts Nextflow:
- First Stage:           /home/ilyass09/scratch/riboseq_pipeline/code/First_Stage.1.2.nf
- MultiQC:               /home/ilyass09/scratch/riboseq_pipeline/code/MultiQc.nf
- MultiQC Management:    /home/ilyass09/scratch/riboseq_pipeline/code/MultiQc_Rapport_Management.nf
- Second Stage:          /home/ilyass09/scratch/riboseq_pipeline/code/Second_Stage.3.1.nf

ÉTAPE 1: FIRST STAGE - Téléchargement et prétraitement des données SRA
----------------------------------------------------------------------
Cette étape télécharge les données SRA, effectue les contrôles qualité avec FastQC 
et le trimming des séquences avec Trim Galore.

Commande pour exécuter:
  nextflow run /home/ilyass09/scratch/riboseq_pipeline/code/First_Stage.1.2.nf 

Sorties:
  - Fichiers FASTQ téléchargés: ${outdir_first_stage}/${gse}_${drug}_${bio}/${gsm}/*.fastq
  - Rapports FastQC (pré-trim): ${outdir_first_stage}/${gse}_${drug}_${bio}/${gsm}/fastqc_pre/*.{html,zip}
  - Fichiers trimmed: ${outdir_first_stage}/${gse}_${drug}_${bio}/${gsm}/trimmed/*.fq
  - Rapports FastQC (post-trim): ${outdir_first_stage}/${gse}_${drug}_${bio}/${gsm}/fastqc_post/*.{html,zip}

ÉTAPE 2: MULTIQC - Génération des rapports qualité par GSE
----------------------------------------------------------
Cette étape analyse les résultats de FastQC et génère des rapports MultiQC par étude GSE.

Commande pour exécuter:
  nextflow run /home/ilyass09/scratch/riboseq_pipeline/code/MultiQc.nf 

Sorties:
  - Rapports MultiQC par GSE: ${outdir_first_stage}/${gse}/multiqc/multiqc_report.html

ÉTAPE 3: MULTIQC MANAGEMENT - Collecte de tous les rapports en un seul endroit
-----------------------------------------------------------------------------
Cette étape collecte tous les rapports MultiQC individuels dans un seul dossier pour faciliter l'accès.

Commande pour exécuter:
  nextflow run /home/ilyass09/scratch/riboseq_pipeline/code/MultiQc_Rapport_Management.nf 

Sorties:
  - Rapports MultiQC centralisés: ${outdir_first_stage}/multiqc_rapport_complet/multiqc_report_*.html

ÉTAPE 4: SECOND STAGE - Alignement des séquences
------------------------------------------------
Cette étape filtre les ARN ribosomiques avec Bowtie et aligne les lectures sur le génome avec STAR.

Commande pour exécuter:
  nextflow run /home/ilyass09/scratch/riboseq_pipeline/code/Second_Stage.3.1.nf \
    -profile beluga 

Sorties:
  - Index Bowtie: ${outdir_stage_stage_parent}/index_bowtie/${type}/*.bt2
  - Index STAR: ${outdir_stage_stage_parent}/index_STAR/${type}/*.{*}
  - Sorties Bowtie (lectures non mappées): ${outdir_stage_stage}/bowtie/${gse}_${drug}_${bio}/${gsm}/*_unmapped.fq
  - Alignements STAR (génome): ${outdir_stage_stage}/STAR/${gse}_${drug}_${bio}/${gsm}/*Aligned.sortedByCoord.out.bam
  - Alignements STAR (transcriptome): ${outdir_stage_stage}/STAR/${gse}_${drug}_${bio}/${gsm}/*Aligned.toTranscriptome.out.bam

UTILISATION AVEC RIBOTIE:
------------------------
Pour utiliser les fichiers BAM alignés au transcriptome avec RiboTIE, créez d'abord un fichier YAML:

template.yml:
  gtf_path: /home/ilyass09/scratch/riboseq_pipeline/fasta_files/Homo_sapiens.GRCh38.113.gtf
  fa_path: /home/ilyass09/scratch/riboseq_pipeline/fasta_files/complete_genome_HS.fa
  
  ribo_paths:
    SRR000001: /home/ilyass09/scratch/riboseq_pipeline/Second_Stage_HS_Single/STAR/GSE_Drug_Bio/SRR000001/SRR000001_Aligned.toTranscriptome.out.bam
    SRR000002: /home/ilyass09/scratch/riboseq_pipeline/Second_Stage_HS_Single/STAR/GSE_Drug_Bio/SRR000002/SRR000002_Aligned.toTranscriptome.out.bam
  
  h5_path: mon_experience.h5

Puis exécutez RiboTIE:
  ribotie template.yml
*/

// ===============================================================================
// PARAMÈTRES POUR RIBOTIE
// ===============================================================================
// Paramètres nécessaires pour les nouveaux processus liés à RiboTIE
// ===============================================================================

// Paramètres spécifiques pour RiboTIE
params.star_dir = '/home/ilyass09/scratch/riboseq_pipeline/Second_Stage_copy/HS/STAR'
params.input_csv = '/home/ilyass09/scratch/riboseq_pipeline/Samples_sheet/test.csv'
params.outdir_ribotie = '/home/ilyass09/scratch/riboseq_pipeline/Ribotie_complet'
params.ribotie_dir = '/home/ilyass09/scratch/riboseq_pipeline/ribotie'
params.max_retries = 2
params.ignore_ribotie_errors = true